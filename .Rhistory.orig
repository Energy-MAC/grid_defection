scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n (1 kW panel) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
plot_usmap(data = data[,c("fips","gen")], values = "gen", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n (1 kW panel) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
##plotting load points
us <- usa_composite(proj = "aeqd")
sol_points <- opt_data[,c(6,5)]
load_points <- unique(opt_data[,c(12,11)])
coordinates(load_points) <- ~x+y
states_centers <- as.data.frame(state.center)
View(states_centers)
View(load_points)
sol_points <- opt_data[,c(7,6)]
load_points <- unique(opt_data[,c(13,12)])
coordinates(load_points) <- ~long+lat.y
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster)
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~long+lat.y
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
##load in lat long for solar
opt_data <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
data <- merge(opt_data[,4:22],sol_col[,3:5],by=c("county","state"))
data$gen <- data$gen/9
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
data <- merge(data, fips, by=c("county","state"))
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = lon, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal()
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster, ggthemes)
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster, ggthemes)
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes( long, lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
View(load_points)
load_points <- filter(load_points, lat < 60)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 1, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plot texas county and load dots
plot_usmap(regions = "counties", include = c("TX"))
plot_usmap(regions = "counties", include = c("TX")) +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
) +
coord_equal()
plot_usmap(regions = "counties", include = c("TX"))
states <- subset(all_states, region %in%  c("Texas"))
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("Texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
coord_equal() + # the points are pre-projected
ggthemes::theme_map() +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
)
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
)
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red")
plot_usmap(data = data[,c("fips","gen")], values = "gen", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n output (kWh) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
##########################################################
## IV. Compile results file ##############################
##########################################################
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "600pv_100stor (min const @99%)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
s <- list.files(path = "G:\\Team Drives\\grid_defect_data\\Analysis\\out\\1200pv_400stor (min const @4% DR)")
write.csv(s, file = "C:\\Users\\wgorman\\Downloads\\files.csv")
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
View(results)
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "600pv_100stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
write.csv(results,paste0(DIR2, OUT,folder,".csv"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "\\600pv_100stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
i=1
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
View(final)
out$year <-  rep(x=2008:2016, each=8760, length.out=78840)
View(out)
final <- out %>% group_by(reliability, case, county,state,month,year) %>%
summarize(load = sum(load),
shed = sum(shed))
View(final)
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "\\600pv_100stor (min const @4% DR)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
##summing when shedding happens
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
out$year <-  rep(x=2008:2016, each=8760, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month,year) %>%
summarize(load = sum(load),
shed = sum(shed))
results <- rbind(results,as.data.frame(final))
}
write.csv(results, file = paste0(DIR2,OUT, "\\","600pv_100stor (min const 4% DR)_month_shedding.csv"))
results <- data.frame()
##counting length of reliability
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
vector <- ifelse(out$shed>0,1,0)
value <- numeric(length(vector))
for(v in 1:length(vector)) {
if(v==1){
value[v] = 0
}else if(vector[v]==1){
value[v] = value[v-1]+1
}else{
value[v] = 0
}
}
out$count_shed <- value
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,count_shed) %>%
summarize(tot = length(load),
month = mean(month))
results <- rbind(results,as.data.frame(final))
}
write.csv(results, file = paste0(DIR2,OUT, "\\","600pv_100stor (min const 4% DR)_reliability_score.csv"))
