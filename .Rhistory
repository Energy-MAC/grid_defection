loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","grid_defect_cost")], values = "grid_defect_cost", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual \n cost \n ($) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
ggsave(filename = paste0(DIR,OUT, "\\images\\syscost_",rels[rel],"_",loads[index],".jpg"))
}
}
##plotting system costs
#######################
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","grid_defect_cost")], values = "grid_defect_cost", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual \n cost \n ($) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
ggsave(filename = paste0(DIR,OUT,
"\\images\\syscost_",rels[rel],"_",loads[index],".jpg"),width=13)
}
}
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5:17)], by=c("county","state","case", "reliability"), all.x = TRUE)
##load defection cost
defect$load_defect_cost_current <- defect$r_curr_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
defect$load_defect_cost_pmc <- defect$private_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
#take differences
defect$curr_diff <- defect$r_current - defect$grid_defect_cost
defect$private_diff <- defect$r_private - defect$grid_defect_cost
##cost based defection
defect$current_defect_cost <- as.character(ifelse(defect$r_current < defect$load_defect_cost_current &
defect$r_current < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_current < defect$grid_defect_cost,1,2)))
defect$private_defect_cost <- as.character(ifelse(defect$r_private < defect$load_defect_cost_pmc &
defect$r_private < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_pmc < defect$grid_defect_cost,1,2)))
##with system constraints
defect$current_defect_wconst <- as.character(ifelse(defect$current_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_current < defect$load_defect_cost_current,0,
ifelse(defect$current_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_current > defect$load_defect_cost_current,1,defect$current_defect_cost)))
defect$private_defect_wconst <- as.character(ifelse(defect$private_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_private < defect$load_defect_cost_pmc,0,
ifelse(defect$private_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_private > defect$load_defect_cost_pmc,1,defect$private_defect_cost)))
#write to csv
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private_defect_wconst","current_defect_wconst")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
data$color <- ifelse(data[,2]=="0","gray",ifelse(data[,2]=="1","deeppink4","darkolivegreen"))
data$label <- ifelse(data[,2]=="0","no defection",ifelse(data[,2]=="1","load defection","grid defection"))
data <- data[order(-label),]
cols <- unique(data[,3])
cols <- as.matrix(cols)
labs <- unique(data[,4])
labs <- as.matrix(labs)
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.85,0.2),legend.text=element_text(size=28),
legend.title=element_text(size=24,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) + guides(fill=FALSE) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\PR\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"),width=13)
}
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_99 <- fread(paste0(DIR,OUT,"\\ann_bill_99_median.csv"))
base_rates_99$reliability <- 0.01
base_rates <- rbind(base_rates_100, base_rates_99)
rm(base_rates_100,base_rates_99)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
sizing <- merge(sizing,sol_col[,3:5],by=c("county","state"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const 4% DR)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
#annual rates
int_rate = 0.04 # percentage interest rate
bat_life = 10 # years
sol_life = 25 # years
inv_life = 10 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$grid_defect_cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$pv_lev <- (PV_COST * PV_RATE +
LOAD_COST * INVT_RATE +
OM_COST ) / (sizing$gen/9)
sizing$pv_size_load_offset <- sizing$energy / (sizing$gen/9)
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","grid_defect_cost")], values = "grid_defect_cost", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual \n cost \n ($) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
ggsave(filename = paste0(DIR,OUT,
"\\images\\syscost_",rels[rel],"_",loads[index],".jpg"),width=13)
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_99 <- fread(paste0(DIR,OUT,"\\ann_bill_99_median.csv"))
base_rates_99$reliability <- 0.01
base_rates <- rbind(base_rates_100, base_rates_99)
rm(base_rates_100,base_rates_99)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\120
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- rbind(sizing_1,sizing_2)
sizing$reliability <- as.character(sizing$reliability)
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## II. Simple graphs #####################################
##########################################################
#select analysis sample
sizing <- rbind(sizing_1,sizing_2)
sizing$reliability <- as.character(sizing$reliability)
##plotting reliability of 0
ggplot(data=sizing[reliability=="0"], aes(pv,storage)) + geom_point(aes(color=case)) +
xlab(label = "Solar size (kW)") + ylab(label = "Storage size (kWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks=seq(0,450,50), limits=c(0,450)) +
scale_y_continuous(breaks=seq(0,2000,500), limits=c(0,2000))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20) +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"))
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 9)
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 5)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6, height = 6)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6, height = 6)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6, height = 6)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
annotate("text",x = 0.8, y=9,label="capacity constraint") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
annotate("text",x = 3, y=9,label="capacity constraint", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
geom_hline(yintercept = 20, linetype="dashed",color="red") +
annotate("text",x = 3, y=9,label="capacity constraint (20 kW)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.88)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%","99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
eom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 3, y=9,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 3, y=9,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 3, y=60,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.1,.9)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 3, y=40,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.85)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 3, y=20,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.85)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 2.8, y=20,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.85)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"),width = 6, height = 5)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
geom_hline(yintercept = 84, linetype="dashed",color="red") +
annotate("text",x = 2.9, y=20,label="capacity constraint (84 kWh)", color = "red") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.15,.85)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3", "red"),labels = c("100%", "99%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"),width = 6, height = 5)
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
ratio <- c("curr_ratio","private_ratio")
index = 1
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Brewer Blues", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Blues", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
ratio <- c("curr_ratio","private_ratio")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Blues", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"),width=11)
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,20), oob=squish, na.value="black",
labels = c("0","5","10","15",bquote({}>=20))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Variable \n rate \n (\u00A2/kWh)\n")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"),width=11)
}
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Blues", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.92,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
#Spectral was original scale
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"),width=11)
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Blues", limits=c(0,20), oob=squish, na.value="black",
labels = c("0","5","10","15",bquote({}>=20))) +
theme(legend.position = c(0.92,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Variable \n rate \n (\u00A2/kWh)\n")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"),width=11)
}
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
ratio <- c("curr_ratio","private_ratio")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Blues", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.92,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
#Spectral was original scale
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"),width=11)
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Greens", limits=c(0,20), oob=squish, na.value="black",
labels = c("0","5","10","15",bquote({}>=20))) +
theme(legend.position = c(0.92,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Variable \n rate \n (\u00A2/kWh)\n")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"),width=11)
}
