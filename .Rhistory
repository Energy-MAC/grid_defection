scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## II. Simple graphs #####################################
##########################################################
#select analysis sample
sizing <- rbind(sizing_1,sizing_2)
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
getOption("repos")
library(ggplot2)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## II. Simple graphs #####################################
##########################################################
#select analysis sample
sizing <- rbind(sizing_1,sizing_2)
ggplot(data=sizing[reliability=="0"], aes(pv,storage)) + geom_point(aes(color=case)) +
xlab(label = "Solar size (kW)") + ylab(label = "Storage size (kWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks=seq(0,450,50), limits=c(0,450)) +
scale_y_continuous(breaks=seq(0,2000,500), limits=c(0,2000))
ggplot(sizing) +
geom_boxplot(aes(x=case, y=pv, fill=reliability)) + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot()
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8))
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%"))
sizing$reliability <- as.character(sizing$reliability)
ggplot(sizing, aes(x=case, y=pv, color=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#(storage)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
ratio <- c("curr_ratio","private_ratio")
ggplot(data = base_rates) +
geom_histogram(aes(x=curr_ratio, fill="Current Rates")) +
geom_histogram(aes(x=private_ratio, fill="PMC Rates")) +
scale_fill_manual(values=c("aquamarine3","deeppink4")) +
xlab(label = "Revenue Source Ratio") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_blank(),legend.position = c(0.5,0.9))
index = 1
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,1500), oob=squish, na.value="black",
labels = c("0","500","1000",bquote({}>=1500))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Annual \n fixed \n  rate ($)\n")
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,20), oob=squish, na.value="black",
labels = c("0","5","10","15",bquote({}>=20))) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold")) +
labs(fill="Variable \n rate \n (\u00A2/kWh)\n")
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp)
devtools::install_github("hrbrmstr/albersusa")
install.packages("devtools", repos="https://cran.rstudio.com/")
install.packages("devtools", repos = "https://cran.rstudio.com/")
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp)
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp)
devtools::install_github("hrbrmstr/albersusa")
options(repos="http://www.stats.ox.ac.uk/pub/RWin")
devtools::install_github("hrbrmstr/albersusa")
library(albersusa)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf)
options(repos="http://www.stats.ox.ac.uk/pub/RWin")
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf)
getOption("repos")
library(albersusa)
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa)
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT = "out\\"
IN = "in\\"
##load in lat long for solar
opt_data <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
data <- merge(opt_data[,4:22],sol_col[,3:5],by=c("county","state"))
data$gen <- data$gen/9
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
data <- merge(data, fips, by=c("county","state"))
plot_usmap(regions = "counties")
plot_usmap(data = data[,c("fips","gen")], values = "gen", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n (1 kW panel) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
plot_usmap(data = data[,c("fips","gen")], values = "gen", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n (1 kW panel) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
##plotting load points
us <- usa_composite(proj = "aeqd")
sol_points <- opt_data[,c(6,5)]
load_points <- unique(opt_data[,c(12,11)])
coordinates(load_points) <- ~x+y
states_centers <- as.data.frame(state.center)
View(states_centers)
View(load_points)
sol_points <- opt_data[,c(7,6)]
load_points <- unique(opt_data[,c(13,12)])
coordinates(load_points) <- ~long+lat.y
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(x, y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster)
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~long+lat.y
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(opt_data[,c(13,12)])
load_points <- points_elided(load_points)
##load in lat long for solar
opt_data <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
data <- merge(opt_data[,4:22],sol_col[,3:5],by=c("county","state"))
data$gen <- data$gen/9
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
data <- merge(data, fips, by=c("county","state"))
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = lon, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(long, lat.y), size = 4, color = "steelblue"
) +
coord_equal()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal()
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster, ggthemes)
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap,
usmap, mapproj,plyr,devtools,sp,maptools,rgdal,rgeos,sf,albersusa,
raster, ggthemes)
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes( long, lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plotting load points
us <- usa_composite(proj = "aeqd")
load_points <- unique(data[,c(10,9)])
load_points <- points_elided(load_points)
View(load_points)
load_points <- filter(load_points, lat < 60)
coordinates(load_points) <- ~lon+lat
proj4string(load_points) <- CRS(us_longlat_proj)
load_points <- spTransform(load_points, CRSobj = CRS(us_aeqd_proj))
load_points <- as.data.frame(coordinates(load_points))
us_map <- fortify(us, region="name")
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 4, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 1, color = "steelblue"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
ggplot() +
geom_map(
data = us_map, map = us_map,
aes(x = long, y = lat, map_id = id),
color = "#2b2b2b", size = 0.1, fill = NA
) +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
) +
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
##plot texas county and load dots
plot_usmap(regions = "counties", include = c("TX"))
plot_usmap(regions = "counties", include = c("TX")) +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
) +
coord_equal()
plot_usmap(regions = "counties", include = c("TX"))
states <- subset(all_states, region %in%  c("Texas"))
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("Texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group),
colour="white", fill="grey10" )
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
coord_equal() + # the points are pre-projected
ggthemes::theme_map()
all_states <- map_data("state")
states <- subset(all_states, region %in%  c("texas"))
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
coord_equal() + # the points are pre-projected
ggthemes::theme_map() +
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
)
ggplot()+ geom_polygon( data=states, aes(x=long, y=lat, group = group))+
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
)
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red"
geom_point(
data = load_points, aes(lon, lat), size = 2, color = "red")
plot_usmap(data = data[,c("fips","gen")], values = "gen", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(500,2000), na.value="black",
labels = c("500","1000","1500","2000")) +
labs(fill="Annual solar\n output (kWh) \n") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=20),
legend.title=element_text(size=20,face="bold"))
