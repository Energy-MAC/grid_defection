#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
sizing <- merge(sizing,sol_col[,3:5],by=c("county","state"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const 4% DR)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
#annual rates
int_rate = 0.04 # percentage interest rate
bat_life = 10 # years
sol_life = 25 # years
inv_life = 10 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$grid_defect_cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$pv_lev <- (PV_COST * PV_RATE +
LOAD_COST * INVT_RATE +
OM_COST ) / (sizing$gen/9)
sizing$pv_size_load_offset <- sizing$energy / (sizing$gen/9)
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5:17)], by=c("county","state","case", "reliability"), all.x = TRUE)
##load defection cost
defect$load_defect_cost_current <- defect$r_curr_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
defect$load_defect_cost_pmc <- defect$private_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
#take differences
defect$curr_diff <- defect$r_current - defect$grid_defect_cost
defect$private_diff <- defect$r_private - defect$grid_defect_cost
##cost based defection
defect$current_defect_cost <- as.character(ifelse(defect$r_current < defect$load_defect_cost_current &
defect$r_current < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_current < defect$grid_defect_cost,1,2)))
defect$private_defect_cost <- as.character(ifelse(defect$r_private < defect$load_defect_cost_pmc &
defect$r_private < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_pmc < defect$grid_defect_cost,1,2)))
##with system constraints
defect$current_defect_wconst <- as.character(ifelse(defect$current_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_current < defect$load_defect_cost_current,0,
ifelse(defect$current_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_current > defect$load_defect_cost_current,1,defect$current_defect_cost)))
defect$private_defect_wconst <- as.character(ifelse(defect$private_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_private < defect$load_defect_cost_pmc,0,
ifelse(defect$private_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_private > defect$load_defect_cost_pmc,1,defect$private_defect_cost)))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v6.csv"))
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private_defect_wconst","current_defect_wconst")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
data$color <- ifelse(data[,2]=="0","gray",ifelse(data[,2]=="1","deeppink4","darkolivegreen"))
data$label <- ifelse(data[,2]=="0","no defection",ifelse(data[,2]=="1","load defection","grid defection"))
data <- data[order(-label),]
cols <- unique(data[,3])
cols <- as.matrix(cols)
labs <- unique(data[,4])
labs <- as.matrix(labs)
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.85,0.2),legend.text=element_text(size=28),
legend.title=element_text(size=24,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) + #guides(fill=FALSE) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"),width=13)
}
}
}
## density plots
rate <- c("private_diff","curr_diff")
rels <- c(0,0.01)
for (index in 1:length(rate)){
for(rel in 1:length(rels)){
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
xlab(label = "solar/storage system cost savings $") + ylab(label = "Density") +
theme(axis.text=element_text(size=22),axis.title=element_text(size=24,face="bold"),
legend.text=element_text(size=24),legend.title=element_text(size=24,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=14))) +
scale_x_continuous(limits=c(-15000,1500), labels=dollar_format(prefix = "$")) +
scale_y_continuous(limits=c(0,0.002))
ggsave(filename = paste0(DIR,OUT, "\\images\\density_",rate[index],"_",rels[rel],".jpg"),width=13)
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_99 <- fread(paste0(DIR,OUT,"\\ann_bill_99_median.csv"))
base_rates_99$reliability <- 0.01
base_rates <- rbind(base_rates_100, base_rates_99)
rm(base_rates_100,base_rates_99)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
sizing <- merge(sizing,sol_col[,3:5],by=c("county","state"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const 4% DR)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
#annual rates
int_rate = 0.04 # percentage interest rate
bat_life = 10 # years
sol_life = 25 # years
inv_life = 10 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$grid_defect_cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$pv_lev <- (PV_COST * PV_RATE +
LOAD_COST * INVT_RATE +
OM_COST ) / (sizing$gen/9)
sizing$pv_size_load_offset <- sizing$energy / (sizing$gen/9)
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5:17)], by=c("county","state","case", "reliability"), all.x = TRUE)
##load defection cost
defect$load_defect_cost_current <- defect$r_curr_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
defect$load_defect_cost_pmc <- defect$private_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
#take differences
defect$curr_diff <- defect$r_current - defect$grid_defect_cost
defect$private_diff <- defect$r_private - defect$grid_defect_cost
##cost based defection
defect$current_defect_cost <- as.character(ifelse(defect$r_current < defect$load_defect_cost_current &
defect$r_current < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_current < defect$grid_defect_cost,1,2)))
defect$private_defect_cost <- as.character(ifelse(defect$r_private < defect$load_defect_cost_pmc &
defect$r_private < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_pmc < defect$grid_defect_cost,1,2)))
##with system constraints
defect$current_defect_wconst <- as.character(ifelse(defect$current_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_current < defect$load_defect_cost_current,0,
ifelse(defect$current_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_current > defect$load_defect_cost_current,1,defect$current_defect_cost)))
defect$private_defect_wconst <- as.character(ifelse(defect$private_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_private < defect$load_defect_cost_pmc,0,
ifelse(defect$private_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_private > defect$load_defect_cost_pmc,1,defect$private_defect_cost)))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v6.csv"))
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private_defect_wconst","current_defect_wconst")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
data$color <- ifelse(data[,2]=="0","gray",ifelse(data[,2]=="1","deeppink4","darkolivegreen"))
data$label <- ifelse(data[,2]=="0","no defection",ifelse(data[,2]=="1","load defection","grid defection"))
data <- data[order(-label),]
cols <- unique(data[,3])
cols <- as.matrix(cols)
labs <- unique(data[,4])
labs <- as.matrix(labs)
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.85,0.2),legend.text=element_text(size=28),
legend.title=element_text(size=24,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) + #guides(fill=FALSE) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"),width=13)
}
}
}
## density plots
rate <- c("private_diff","curr_diff")
rels <- c(0,0.01)
for (index in 1:length(rate)){
for(rel in 1:length(rels)){
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
xlab(label = "solar/storage system cost savings $") + ylab(label = "Density") +
theme(axis.text=element_text(size=22),axis.title=element_text(size=24,face="bold"),
legend.text=element_text(size=24),legend.title=element_text(size=24,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=14))) +
scale_x_continuous(limits=c(-15000,1500), labels=dollar_format(prefix = "$")) +
scale_y_continuous(limits=c(0,0.002))
ggsave(filename = paste0(DIR,OUT, "\\images\\density_",rate[index],"_",rels[rel],".jpg"),width=13)
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_99 <- fread(paste0(DIR,OUT,"\\ann_bill_99_median.csv"))
base_rates_99$reliability <- 0.01
base_rates <- rbind(base_rates_100, base_rates_99)
rm(base_rates_100,base_rates_99)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
#annual rates
int_rate = 0.04 # percentage interest rate
bat_life = 10 # years
sol_life = 25 # years
inv_life = 10 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
#get costs
#Set costs
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
sizing_1 <- merge(sizing_1,opt_long_max,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
sizing_1 <- merge(sizing_1,opt_long_energy,by=c("county","state","case"))
#get costs
#Set costs
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1300 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
sizing_2 <- merge(sizing_2,opt_long_max,by=c("county","state","case"))
sizing_2$cost <- sizing_2$pv * PV_COST * PV_RATE + sizing_2$storage * BAT_COST * BAT_RATE +
sizing_2$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_2$max_load
sizing_2 <- merge(sizing_2,opt_long_energy,by=c("county","state","case"))
compiled <- rbind(sizing_1, sizing_2)
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#get costs
#Set costs
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
sizing_1 <- merge(sizing_1,opt_long_max,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
sizing_1 <- merge(sizing_1,opt_long_energy,by=c("county","state","case"))
#get costs
#Set costs
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1300 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
sizing_2 <- merge(sizing_2,opt_long_max,by=c("county","state","case"))
sizing_2$cost <- sizing_2$pv * PV_COST * PV_RATE + sizing_2$storage * BAT_COST * BAT_RATE +
sizing_2$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_2$max_load
sizing_2 <- merge(sizing_2,opt_long_energy,by=c("county","state","case"))
compiled <- rbind(sizing_1, sizing_2)
##average stats
r_stats <- sizing_1 %>% group_by(reliability, case) %>% summarize(med_sol = median(pv),
med_stor = median(storage),
max_sol = max(pv),
max_stor = max(storage),
min_sol = min(pv),
min_stor = min(storage),
med_cost = median(cost),
count = length(pv),
mean_sol = mean(pv),
mean_stor = mean(storage),
pv_10 = quantile(pv,.1),
stor_10 = quantile(storage,.1),
pv_90 = quantile(pv,.9),
stor_90 = quantile(storage,.9),
med_energy = median(energy))
write.csv(r_stats,file = paste0(DIR,OUT, "\\size_cost_v5.csv"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap,
RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_99 <- fread(paste0(DIR,OUT,"\\ann_bill_99_median.csv"))
base_rates_99$reliability <- 0.01
base_rates <- rbind(base_rates_100, base_rates_99)
rm(base_rates_100,base_rates_99)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const @4% DR).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const @4% DR).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_2
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
sizing <- merge(sizing,sol_col[,3:5],by=c("county","state"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const 4% DR)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1300 # $/kW peak load
OM_COST = 12 # $/kW peak load per year
#annual rates
int_rate = 0.04 # percentage interest rate
bat_life = 10 # years
sol_life = 25 # years
inv_life = 10 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$grid_defect_cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$pv_lev <- (PV_COST * PV_RATE +
LOAD_COST * INVT_RATE +
OM_COST ) / (sizing$gen/9)
sizing$pv_size_load_offset <- sizing$energy / (sizing$gen/9)
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5:17)], by=c("county","state","case", "reliability"), all.x = TRUE)
##load defection cost
defect$load_defect_cost_current <- defect$r_curr_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
defect$load_defect_cost_pmc <- defect$private_fixed + (1 - defect$reliability) * defect$energy *
defect$pv_lev
#take differences
defect$curr_diff <- defect$r_current - defect$grid_defect_cost
defect$private_diff <- defect$r_private - defect$grid_defect_cost
##cost based defection
defect$current_defect_cost <- as.character(ifelse(defect$r_current < defect$load_defect_cost_current &
defect$r_current < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_current < defect$grid_defect_cost,1,2)))
defect$private_defect_cost <- as.character(ifelse(defect$r_private < defect$load_defect_cost_pmc &
defect$r_private < defect$grid_defect_cost,0,
ifelse(defect$load_defect_cost_pmc < defect$grid_defect_cost,1,2)))
##with system constraints
defect$current_defect_wconst <- as.character(ifelse(defect$current_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_current < defect$load_defect_cost_current,0,
ifelse(defect$current_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_current > defect$load_defect_cost_current,1,defect$current_defect_cost)))
defect$private_defect_wconst <- as.character(ifelse(defect$private_defect_cost == 2 &
(defect$pv > 20 | defect$storage > 200) & defect$r_private < defect$load_defect_cost_pmc,0,
ifelse(defect$private_defect_cost == 2 & (defect$pv > 20 | defect$storage > 200) &
defect$r_private > defect$load_defect_cost_pmc,1,defect$private_defect_cost)))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v6_highcost.csv"))
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private_defect_wconst","current_defect_wconst")
rels <- c(0,0.01)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
data$color <- ifelse(data[,2]=="0","gray",ifelse(data[,2]=="1","deeppink4","darkolivegreen"))
data$label <- ifelse(data[,2]=="0","no defection",ifelse(data[,2]=="1","load defection","grid defection"))
data <- data[order(-label),]
cols <- unique(data[,3])
cols <- as.matrix(cols)
labs <- unique(data[,4])
labs <- as.matrix(labs)
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.85,0.2),legend.text=element_text(size=28),
legend.title=element_text(size=24,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) + #guides(fill=FALSE) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\HC\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"),width=13)
}
}
}
