rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
name <- c("fips",rates[index])
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
index=1
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
name <- c("fips",rates[index])
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
dev.off()
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 800 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
ggsave(filename = paste0(DIR,OUT, "\\images\\syscost_",rels[rel],"_",loads[index],".jpg"))
}
}
rel = 1
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
ggsave(filename = paste0(DIR,OUT, "\\images\\syscost_",rels[rel],"_",loads[index],".jpg"))
}
}
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:13)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
loads <- c("LOW","BASE","HIGH")
rate <- c("private_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
plot_usmap(data = select(final,one_of(c("fips", rate[ra]))),
values = rate[ra], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-1000,1000), oob=squish, na.value="black",
labels = c(bquote({}<=-1000),"-500","0","500","1000")) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual saving ($) \n")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
loads <- c("LOW","BASE","HIGH")
rate <- c("private_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
plot_usmap(data = select(final,one_of(c("fips", rate[ra]))),
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-1000,1000), oob=squish, na.value="black",
labels = c(bquote({}<=-1000),"-500","0","500","1000")) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual saving ($) \n")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## II. Simple graphs #####################################
##########################################################
#select analysis sample
sizing <- rbind(sizing_1,sizing_2)
##plotting reliability of 0
ggplot(data=sizing[reliability=="0"], aes(pv,storage)) + geom_point(aes(color=case)) +
xlab(label = "Solar size (kW)") + ylab(label = "Storage size (kWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks=seq(0,450,50), limits=c(0,450)) +
scale_y_continuous(breaks=seq(0,2000,500), limits=c(0,2000))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(breaks=seq(0,300,50), limits=c(0,300))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(breaks=seq(0,300,50), limits=c(0,300), trans = 'log2')
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log2')
##box and whisker (solar)
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log2', limits=c(0,500))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log2')
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log2')
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log2') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log2') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log100') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#(storage)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
ggplot(sizing, aes(x=case, y=pv, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Solar size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,300,50), limits=c(0,300)
ggsave(filename = paste0(DIR,OUT, "\\images\\pv_sizing.jpg"))
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"))
#(storage)
ggplot(sizing, aes(x=case, y=storage, fill=reliability)) +
geom_boxplot() + xlab(label = "Load Case") + ylab(label = "Storage size (kWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.9,.8)) +
scale_fill_manual(values = c("cadetblue4", "darkgoldenrod3"),labels = c("100%", "95%")) +
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_y_continuous(trans = 'log10') + scale_x_discrete(limits=c("LOW","BASE","HIGH"))
#breaks=seq(0,700,100), limits=c(0,700)
ggsave(filename = paste0(DIR,OUT, "\\images\\storage_sizing.jpg"))
select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 800 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 800 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
sizing_1 <- merge(sizing_1,opt_long,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
sizing_1 <- merge(sizing_1,opt_long_max,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
#get costs
#Set costs
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1600 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
sizing_2 <- merge(sizing_2,opt_long_max,by=c("county","state","case"))
sizing_2$cost <- sizing_2$pv * PV_COST * PV_RATE + sizing_2$storage * BAT_COST * BAT_RATE +
sizing_2$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_2$max_load
compiled <- rbind(sizing_1, sizing_2)
##average stats
r_stats <- sizing_1 %>% group_by(reliability, case) %>% summarize(med_sol = median(pv),
med_stor = median(storage),
max_sol = max(pv),
max_stor = max(storage),
min_sol = min(pv),
min_stor = min(storage),
med_cost = median(cost),
count = length(pv),
mean_sol = mean(pv),
mean_stor = mean(storage),
pv_10 = quantile(pv,.1),
stor_10 = quantile(storage,.1),
pv_90 = quantile(pv,.9),
stor_90 = quantile(storage,.9))
View(r_stats)
write.csv(r_stats,file = paste0(DIR,OUT, "\\size_cost_v3.csv"))
ggplot(data = base_rates) +
geom_histogram(aes(x=curr_ratio, fill="Current Rates")) +
geom_histogram(aes(x=private_ratio, fill="PMC Rates")) +
scale_fill_manual(values=c("aquamarine3","deeppink4")) +
xlab(label = "Revenue Source Ratio") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_blank(),legend.position = c(0.7,0.9))
ggplot(data = base_rates) +
geom_histogram(aes(x=curr_ratio, fill="Current Rates")) +
geom_histogram(aes(x=private_ratio, fill="PMC Rates")) +
scale_fill_manual(values=c("aquamarine3","deeppink4")) +
xlab(label = "Revenue Source Ratio") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_blank(),legend.position = c(0.5,0.9))
ggsave(filename = paste0(paste0(DIR,OUT, "\\images\\density_ratio",".jpg")))
rep(c(1,2,3,4),c(2,2,2,2))
rep(c(1,2,3,4),c(2,2,2,2), length=16)
rep(c(1,2,3,4),c(2,2,2,2), length.out=16)
rep(c(1,2,3,4),c(2,2,2,2), each=2)
rep(c(1,2,3,4), each=2)
rep(c(1,2,3,4), each=2, length.out=16)
rep(x=1:12, each=2, length.out=100)
