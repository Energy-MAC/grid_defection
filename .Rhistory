library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "\\600pv_100stor (min const)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
i=1
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,count_shed,month) %>%
summarize(load = sum(load),
shed = sum(shed))
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
View(final)
##summing when shedding happens
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
results <- rbind(results,as.data.frame(final))
}
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
##summing when shedding happens
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
results <- rbind(results,as.data.frame(final))
}
write.csv(results, file = paste0(DIR2,OUT, "\\","600pv_100stor (min const)_month_shedding.csv"))
View(results)
results$shed_percent <- results$shed / results$load
final <- results %>% group_by(month) %>%
summarize(shed_percent = mean(shed_percent))
View(final)
write.csv(final, file = paste0(DIR2,OUT, "\\month_shedding.csv"))
final_2 <- results %>% group_by(month) %>%
summarize(load = sum(load),
shed = sum(shed))
final_2$shed_percent <- final_2$shed / final_2$load
View(final_2)
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap, usmap, mapproj,plyr)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT = "out\\"
IN = "in\\"
mapping <- fread(paste0(DIR,IN,"state_mapping.csv"))
plot_usmap(data = mapping, values = "Region", regions = "states") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=16),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
mapping <- fread(paste0(DIR,IN,"state_mapping.csv"))
plot_usmap(data = mapping, values = "Region", regions = "states") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=16),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
View(opt)
View(sizing)
select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score_v2.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
##########################################################
## III. Combining input data #############################
##########################################################
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
View(list)
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score_v2.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:13)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
defect$current <- as.character(ifelse(defect$curr_diff > 0 & defect$pv < 20 & defect$storage<200,1,0))
defect$private <- as.character(ifelse(defect$private_diff > 0 & defect$pv < 20 & defect$storage<200,1,0))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v4.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#solar data
sol_col <- fread(paste0(DIR,IN,"\\solar_collection.csv"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
sizing <- merge(sizing,sol_col[,3:5],by=c("county","state"))
View(sizing)
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score_v2.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 650 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$pv_lev <- (PV_COST * PV_RATE +
sizing$max_load * LOAD_COST * INVT_RATE +
OM_COST * sizing$max_load) / sizing$sol_tot
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
View(sizing)
sizing$pv_lev <- (PV_COST * PV_RATE +
sizing$max_load * LOAD_COST * INVT_RATE +
OM_COST * sizing$max_load) / (sizing$gen/9)
View(sizing)
sizing$pv_lev <- (PV_COST * PV_RATE +
5 * LOAD_COST * INVT_RATE +
OM_COST * 5) / (sizing$gen/9)
View(sizing)
PV_COST * PV_RATE
5 * LOAD_COST * INVT_RATE
OM_COST * 5
sizing$pv_lev <- (PV_COST * PV_RATE +
LOAD_COST * INVT_RATE +
OM_COST ) / (sizing$gen/9)
View(sizing)
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:15)], by=c("county","state","case", "reliability"), all.x = TRUE)
sizing$cap_ex <- sizing$pv * PV_COST  + sizing$storage * BAT_COST +
sizing$max_load * LOAD_COST
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:15)], by=c("county","state","case", "reliability"), all.x = TRUE)
View(defect)
##load defection
defect$load_current <- as.character(ifelse(defect$r_curr_variable/100 > defect$pv_lev,1,0))
defect$load_pmc <- as.character(ifelse(defect$private_variable/100 > defect$pv_lev,1,0))
View(defect)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$current <- as.character(ifelse(defect$curr_diff > 0 & defect$pv < 20 & defect$storage<200,1,0))
defect$private <- as.character(ifelse(defect$private_diff > 0 & defect$pv < 20 & defect$storage<200,1,0))
index = 1
rel = 1
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private","current")
rels <- c(0,0.05)
final <- subset(defect, case == loads[index] & reliability == rels[rel])
ra = 1
data <- select(final,one_of(c("fips", rate[ra])))
View(final)
## load defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("load_pmc","load_current")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
## load defection plotting
loads <- c("LOW")
rate <- c("load_pmc","load_current")
rels <- c(0)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
## load defection plotting
loads <- c("LOW")
rate <- c("load_pmc","load_current")
rels <- c(0)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
## Grid defection plotting
loads <- c("LOW","BASE","HIGH")
rate <- c("private","current")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v4.csv"))
