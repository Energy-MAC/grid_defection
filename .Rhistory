hi_ak_rates <- filter(add_hi_ak, year == 2016)
hi_ak_rates <- hi_ak_rates[ which(hi_ak_rates$state == "HI" | hi_ak_rates$state == "AK") , ]
#pick columns of interest
hi_ak_rates <- hi_ak_rates[keeps]
View(hi_ak_rates)
#combining datasets
final_rates <- rbind(final_rates,hi_ak_rates)
View(final_rates)
#calc rate designs of interest
final_rates$curr_ratio <- final_rates$fixedcharge * 12 * final_rates$res_cust / final_rates$res_rev
final_rates$r_curr_fixed <- final_rates$fixedcharge * 12
final_rates$r_curr_variable <- final_rates$varcharge
final_rates$private_ratio <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_rev
final_rates$private_fixed <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_cust
final_rates$private_variable <- final_rates$pmc
final_rates$r_0_fixed <- 0
final_rates$r_0_variable <- final_rates$res_rev/final_rates$res_sales * 100
final_rates$r_0.25_fixed <- final_rates$res_rev * 0.25 / final_rates$res_cust
final_rates$r_0.25_variable <- final_rates$res_rev * 0.75 / final_rates$res_sales * 100
final_rates$r_0.5_fixed <- final_rates$res_rev * 0.5 / final_rates$res_cust
final_rates$r_0.5_variable <- final_rates$res_rev * 0.5 / final_rates$res_sales * 100
final_rates$r_0.75_fixed <- final_rates$res_rev * 0.75 / final_rates$res_cust
final_rates$r_0.75_variable <- final_rates$res_rev * 0.25 / final_rates$res_sales * 100
final_rates$r_1_fixed <- final_rates$res_rev/final_rates$res_cust
final_rates$r_1_variable <- 0
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,9:24)], by = "eia_id_e")
View(county_rates)
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:20)]
out_rates <- county_rates %>% group_by(county, state.x) %>% summarise_all(funs(median))
View(out_rates)
write.csv(out_rates,paste0(DIR, OUT,"\\county_rates_v2.csv"))
View(out_rates)
View(county_rates)
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
View(county_rates)
View(final_rates)
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
View(utilitytocounty)
View(county_rates)
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>% summarise_all(funs(weighted.mean(., res_cust)),
-res_cust)
View(county_rates)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_all(funs(weighted.mean(., county_rates$res_cust)),-res_cust)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_all(funs(weighted.mean(., county_rates$res_cust)),-county_rates$res_cust)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_all(funs(weighted.mean(., res_cust)),-county_rates$res_cust)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_each(funs(weighted.mean(., res_cust)),-res_cust)
View(out_rates)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_all(funs(weighted.mean(., res_cust)),-res_cust)
View(county_rates)
write.csv(county_rates,paste0(DIR, OUT,"\\test.csv"))
View(out_rates)
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_all(funs(weighted.mean(., res_cust)), -res_cust)
write.csv(out_rates,paste0(DIR, OUT,"\\county_rates_v2.csv"))
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_each(funs(weighted.mean(., res_cust)), -res_cust)
write.csv(out_rates,paste0(DIR, OUT,"\\county_rates_v2.csv"))
View(utilitytocounty)
test <- utilitytocounty[!duplicated(utilitytocounty[,c('county', 'state')]),]
View(test)
View(utilitytocounty)
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e", all=T)
View(county_rates)
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,sp, foreign)
# Set working directory
#DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR <- "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
#collect geographic information
county_zip = readRDS(paste0(DIR,IN,"\\Stephen\\final\\countytozip.rds"))
#collect geographic names
county_names <- read.csv(paste0(DIR,IN,"\\Stephen\\county_names.csv"))
county_names$code <- as.character(county_names$code)
county_names$state_fips <- as.numeric(ifelse(nchar(county_names$code) == 4, substring(county_names$code,1,1),
substring(county_names$code,1,2)))
county_names$county_fips <- as.numeric(ifelse(nchar(county_names$code) == 4, substring(county_names$code,2,4),
substring(county_names$code,3,5)))
county_names$county <- tolower(county_names$county)
county_names$state <- tolower(county_names$state)
county_zip <- merge(county_zip, county_names[,c(2:5)], by = c("state_fips","county_fips"))
#tmypoints = readRDS(paste0(DIR,IN,"\\Stephen\\final\\pointsTMY3.rds"))
utilitytozip = readRDS(paste0(DIR,IN,"\\Stephen\\final\\utilitytozip.rds"))
colnames(utilitytozip)[1] <- "eia_id_e"
utilitytozip <- filter(utilitytozip, year == 2016)
#combine county to zip
utilitytozip_comb <- merge(utilitytozip[,c(1,3)], county_zip[,c(3:5)], by = "zip")
View(utilitytozip_comb)
#collect rate information
rates = read.dta(paste0(DIR,IN,"\\Stephen\\final\\output.dta"))
#only pick 2016
final_rates <- filter(rates, year == 2016)
#pick columns of interest
keeps <- c("state","eia_id_e","res_cust","res_sales","res_rev","fixedcharge","varcharge", "pmc")
final_rates <- final_rates[keeps]
#download HI and AK data
add_hi_ak <- read.dta(paste0(DIR,IN, "\\Stephen\\final\\AK_HI.dta"))
#only pick 2016 and hawaii/alaska
hi_ak_rates <- filter(add_hi_ak, year == 2016)
hi_ak_rates <- hi_ak_rates[ which(hi_ak_rates$state == "HI" | hi_ak_rates$state == "AK") , ]
#pick columns of interest
hi_ak_rates <- hi_ak_rates[keeps]
#combining datasets
final_rates <- rbind(final_rates,hi_ak_rates)
#calc rate designs of interest
final_rates$curr_ratio <- final_rates$fixedcharge * 12 * final_rates$res_cust / final_rates$res_rev
final_rates$r_curr_fixed <- final_rates$fixedcharge * 12
final_rates$r_curr_variable <- final_rates$varcharge
final_rates$private_ratio <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_rev
final_rates$private_fixed <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_cust
final_rates$private_variable <- final_rates$pmc
final_rates$r_0_fixed <- 0
final_rates$r_0_variable <- final_rates$res_rev/final_rates$res_sales * 100
final_rates$r_0.25_fixed <- final_rates$res_rev * 0.25 / final_rates$res_cust
final_rates$r_0.25_variable <- final_rates$res_rev * 0.75 / final_rates$res_sales * 100
final_rates$r_0.5_fixed <- final_rates$res_rev * 0.5 / final_rates$res_cust
final_rates$r_0.5_variable <- final_rates$res_rev * 0.5 / final_rates$res_sales * 100
final_rates$r_0.75_fixed <- final_rates$res_rev * 0.75 / final_rates$res_cust
final_rates$r_0.75_variable <- final_rates$res_rev * 0.25 / final_rates$res_sales * 100
final_rates$r_1_fixed <- final_rates$res_rev/final_rates$res_cust
final_rates$r_1_variable <- 0
county_rates <- merge(utilitytozip_comb[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_each(funs(weighted.mean(., res_cust)), -res_cust)
View(out_rates)
test <- utilitytocounty[!duplicated(utilitytocounty[,c('county', 'state')]),]
###   PURPOSE: calcualte various rate designs
###
###############################################################################
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,sp, foreign)
# Set working directory
#DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR <- "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in rate data ##################################
##########################################################
#more utility geography
utilitytocounty = read.dta(paste0(DIR,IN,"\\Stephen\\final\\utilitytocounty.dta"))
colnames(utilitytocounty)[2] <- "eia_id_e"
utilitytocounty <- filter(utilitytocounty, year == 2016)
test <- utilitytocounty[!duplicated(utilitytocounty[,c('county', 'state')]),]
View(test)
rates = read.dta(paste0(DIR,IN,"\\Stephen\\final\\output.dta"))
#only pick 2016
final_rates <- filter(rates, year == 2016)
#pick columns of interest
keeps <- c("state","eia_id_e","res_cust","res_sales","res_rev","fixedcharge","varcharge", "pmc")
final_rates <- final_rates[keeps]
#download HI and AK data
add_hi_ak <- read.dta(paste0(DIR,IN, "\\Stephen\\final\\AK_HI.dta"))
#only pick 2016 and hawaii/alaska
hi_ak_rates <- filter(add_hi_ak, year == 2016)
hi_ak_rates <- hi_ak_rates[ which(hi_ak_rates$state == "HI" | hi_ak_rates$state == "AK") , ]
#pick columns of interest
hi_ak_rates <- hi_ak_rates[keeps]
#combining datasets
final_rates <- rbind(final_rates,hi_ak_rates)
#calc rate designs of interest
final_rates$curr_ratio <- final_rates$fixedcharge * 12 * final_rates$res_cust / final_rates$res_rev
final_rates$r_curr_fixed <- final_rates$fixedcharge * 12
final_rates$r_curr_variable <- final_rates$varcharge
final_rates$private_ratio <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_rev
final_rates$private_fixed <- (final_rates$res_rev -
(final_rates$pmc/100 * final_rates$res_sales))/final_rates$res_cust
final_rates$private_variable <- final_rates$pmc
final_rates$r_0_fixed <- 0
final_rates$r_0_variable <- final_rates$res_rev/final_rates$res_sales * 100
final_rates$r_0.25_fixed <- final_rates$res_rev * 0.25 / final_rates$res_cust
final_rates$r_0.25_variable <- final_rates$res_rev * 0.75 / final_rates$res_sales * 100
final_rates$r_0.5_fixed <- final_rates$res_rev * 0.5 / final_rates$res_cust
final_rates$r_0.5_variable <- final_rates$res_rev * 0.5 / final_rates$res_sales * 100
final_rates$r_0.75_fixed <- final_rates$res_rev * 0.75 / final_rates$res_cust
final_rates$r_0.75_variable <- final_rates$res_rev * 0.25 / final_rates$res_sales * 100
final_rates$r_1_fixed <- final_rates$res_rev/final_rates$res_cust
final_rates$r_1_variable <- 0
##########################################################
## III. combine geography #################################
##########################################################
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- merge(utilitytozip_comb[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_each(funs(weighted.mean(., res_cust)), -res_cust)
county_rates <- merge(utilitytocounty[,c(2,3,4)], final_rates[,c(1,2,3,9:24)], by = "eia_id_e")
county_rates <- county_rates[!duplicated(county_rates[,c('eia_id_e', 'county', 'state.x')]),]
county_rates <- county_rates[,c(2,3,5:21)]
county_rates$state.x <- tolower(county_rates$state.x)
county_rates$county <- tolower(county_rates$county)
out_rates <- county_rates %>% group_by(county, state.x) %>%
summarise_each(funs(weighted.mean(., res_cust)), -res_cust)
write.csv(out_rates,paste0(DIR, OUT,"\\county_rates_v2.csv"))
# Set working directory
DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95.csv"))
base_rates_95$reliability <- 0.05
###############################################################################
###
###   Off-grid Analysis
###   PURPOSE: plot optimization results
###
###############################################################################
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95.csv"))
base_rates_95$reliability <- 0.05
View(base_rates_100)
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
name <- c("fips",rates[index])
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
index=1
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
name <- c("fips",rates[index])
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
dev.off()
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 800 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
ggsave(filename = paste0(DIR,OUT, "\\images\\syscost_",rels[rel],"_",loads[index],".jpg"))
}
}
rel = 1
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
loads <- c("LOW","BASE","HIGH")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
size <- subset(sizes, case == loads[index] & reliability == rels[rel])
plot_usmap(data = size[,c("fips","cost")], values = "cost", regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,8000), oob=squish, na.value="black",
labels = c("0","2000","4000","6000",bquote({}>=8000))) +
labs(fill="Annual cost ($)") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0))
ggsave(filename = paste0(DIR,OUT, "\\images\\syscost_",rels[rel],"_",loads[index],".jpg"))
}
}
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:13)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
loads <- c("LOW","BASE","HIGH")
rate <- c("private_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
plot_usmap(data = select(final,one_of(c("fips", rate[ra]))),
values = rate[ra], regions = "counties") +
scale_fill_distiller(palette = "Spectral", limits=c(-1000,1000), oob=squish, na.value="black",
labels = c(bquote({}<=-1000),"-500","0","500","1000")) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual saving ($) \n")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
loads <- c("LOW","BASE","HIGH")
rate <- c("private_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
plot_usmap(data = select(final,one_of(c("fips", rate[ra]))),
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-1000,1000), oob=squish, na.value="black",
labels = c(bquote({}<=-1000),"-500","0","500","1000")) +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual saving ($) \n")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(2.5,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
rates <- c("r_curr_fixed","r_curr_variable", "private_fixed","private_variable")
for (index in seq(1, 4, 2)){
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index]))),
values = rates[index], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(-70,2400), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Annual fixed rate ($)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index],".jpg"))
plot_usmap(data = select(base_rates,one_of(c("fips", rates[index+1]))),
values = rates[index+1], regions = "counties",lines=NA) +
scale_fill_distiller(palette = "Spectral", limits=c(0,30), na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=15),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="Variable rate \n (cent/kWh)")
ggsave(filename = paste0(DIR,OUT, "\\images\\",rates[index+1],".jpg"))
}
