xlab(label = "Cost utility electricity - cost solar/stor system") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(-30000,1000))
rate <- c("r1_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(rate)){
for(rel in 1:length(rels)){
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
geom_text(size = 7, aes(x=-5000, label="Defection line", y = 0.00075), colour="black") +
xlab(label = "Cost utility electricity - cost solar/stor system") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(-30000,1000))
ggsave(filename = paste0(paste0(DIR,OUT, "\\images\\density_",rate[index],"_",rels[rel],".jpg")))
}
}
## density plots
rate <- c("r1_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(rate)){
for(rel in 1:length(rels)){
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
xlab(label = "Cost utility electricity - cost solar/stor system") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(-30000,1000))
ggsave(filename = paste0(paste0(DIR,OUT, "\\images\\density_",rate[index],"_",rels[rel],".jpg")))
}
}
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
xlab(label = "Cost utility electricity - cost solar/stor system") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(-30000,1000))
rate <- c("r1_diff","curr_diff")
rels <- c(0,0.05)
for (index in 1:length(rate)){
for(rel in 1:length(rels)){
ggplot(defect[reliability==rels[rel]], aes_string(rate[index], colour="case", fill="case")) +
geom_density(alpha=0.55) + geom_vline(xintercept=0) +
xlab(label = "Cost utility electricity - cost solar/stor system") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(-30000,1000))
ggsave(filename = paste0(paste0(DIR,OUT, "\\images\\density_",rate[index],"_",rels[rel],".jpg")))
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, RColorBrewer, data.table, scales)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\2018Spring\\Comp Programing in Econ\\Project\\"
DIR = "G:\\Team Drives\\Beyond LCOE\\OE - Limts of LCOE\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
#solar/storage systems
costs <- fread(paste0(DIR,OUT,"\\exeter_result.csv"))
View(costs)
colnames(costs)<- c("project","unit_cost","lev_cost","type")
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"))
give.n <- function(x){
return(c(y = mean(x), label = length(x)))
}
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text")
#(storage)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", position = position_dodge(width = 0.75))
#(storage)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", position = position_dodge(height = 2))
#(storage)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", position  = position_jitter(height=1, width = 0))
#(storage)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", size=20)
#(storage)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", size=10)
#(unit cost)
ggplot(costs, aes(x=type, y=lev_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", size=10)
#(unit cost)
ggplot(costs, aes(x=type, y=lev_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Levelized Cost ($/MWh)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", size=10)
ggsave(filename = paste0(DIR,OUT, "\\images\\LCOE.jpg"))
#(unit cost)
ggplot(costs, aes(x=type, y=unit_cost)) +
geom_boxplot() + xlab(label = "Fuel Type") + ylab(label = "Unit Cost ($/kW)") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold")) +
stat_summary(fun.data = give.n, geom = "text", size=10)
ggsave(filename = paste0(DIR,OUT, "\\images\\UNIT_COST.jpg"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\2018Spring\\Comp Programing in Econ\\Project\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
INPUT = "in"
#solar/storage systems
sizing <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#alternative sizes
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
#solar/storage systems
sizing <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
sizing$version <- "500pv_100stor"
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#alternative sizes
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing$version <- "1500pv_200stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
sizing$version <- "3000pv_450stor"
compiled <- rbind(sizing, sizing_1)
compiled <- rbind(compiled, sizing_2)
#solar/storage systems
sizing <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
sizing$version <- "500pv_100stor"
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#alternative sizes
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing_1$version <- "1500pv_200stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
sizing_2$version <- "3000pv_450stor"
compiled <- rbind(sizing, sizing_1)
compiled <- rbind(compiled, sizing_2)
r_stats <- compiled %>% group_by(reliability, case, version) %>%
summarize(med_sol = median(pv),med_stor = median(storage),max_sol = max(pv), max_stor = max(storage),
min_sol = min(pv),min_stor = min(storage))
View(r_stats)
write.csv(r_stats,filename = paste0(DIR,OUT, "size_cost.csv") )
write.csv(r_stats,file = paste0(DIR,OUT, "size_cost.csv"))
write.csv(r_stats,file = paste0(DIR,OUT, "\\size_cost.csv"))
#solar/storage systems
sizing_3 <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
sizing_3$version <- "500pv_100stor"
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing_1$version <- "1500pv_200stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
sizing_2$version <- "3000pv_450stor"
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\2018Spring\\Comp Programing in Econ\\Project\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
INPUT = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_3 <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
sizing_3$version <- "500pv_100stor"
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing_1$version <- "1500pv_200stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
sizing_2$version <- "3000pv_450stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_3
#Set costs
BAT_COST = 200 # $/kWh
PV_COST = 1000 # $/kW
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(5:8,10)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection.csv") )
test <- numeric(3)
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
#DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
##########################################################
## III. Combining input data #############################
##########################################################
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
View(list)
i=1
#create load dataframes
temp_low <- fread(paste0(DIR,IN,"res_load\\LOW\\", list[i,10],".csv"), col.names=c("V","load"))
View(temp_low)
#create load dataframes
temp_low <- fread(paste0(DIR,IN,"res_load\\LOW\\", list[i,10],".csv"), col.names=c("V","load"))
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
low <- c()
med <- c()
high <- c()
low_max <- c()
med_max <- c()
high_max <- c()
low_min <- c()
med_min <- c()
high_min <- c()
#create load dataframes
temp_low <- fread(paste0(DIR,IN,"res_load\\LOW\\", list[i,10],".csv"), col.names=c("V","load"))
low <- append(low, sum(temp_low$load))
low_max <- append(low_max, max(temp_low$load))
low_min <- append(low_min, min(temp_low$load))
temp_med <- fread(paste0(DIR,IN,"res_load\\BASE\\", list[i,10],".csv"), col.names=c("V","load"))
med <- append(med, sum(temp_med$load))
med_max <- append(med_max, max(temp_med$load))
med_min <- append(med_min, min(temp_med$load))
temp_high <- fread(paste0(DIR,IN,"res_load\\HIGH\\", list[i,10],".csv"), col.names=c("V","load"))
high <- append(high, sum(temp_high$load))
high_max <- append(high_max, max(temp_high$load))
high_min <- append(high_min, min(temp_high$load))
list <- fread(paste0(DIR,IN,"optimization_list.csv"))
low <- c()
med <- c()
high <- c()
low_max <- c()
med_max <- c()
high_max <- c()
low_min <- c()
med_min <- c()
high_min <- c()
for (i in 1:nrow(list)) {
#create load dataframes
temp_low <- fread(paste0(DIR,IN,"res_load\\LOW\\", list[i,10],".csv"), col.names=c("V","load"))
low <- append(low, sum(temp_low$load))
low_max <- append(low_max, max(temp_low$load))
low_min <- append(low_min, min(temp_low$load))
temp_med <- fread(paste0(DIR,IN,"res_load\\BASE\\", list[i,10],".csv"), col.names=c("V","load"))
med <- append(med, sum(temp_med$load))
med_max <- append(med_max, max(temp_med$load))
med_min <- append(med_min, min(temp_med$load))
temp_high <- fread(paste0(DIR,IN,"res_load\\HIGH\\", list[i,10],".csv"), col.names=c("V","load"))
high <- append(high, sum(temp_high$load))
high_max <- append(high_max, max(temp_high$load))
high_min <- append(high_min, min(temp_high$load))
}
list$low_energy <- low
list$med_energy <- med
list$high_energy <- high
list$low_max <- low_max
list$med_max <- med_max
list$high_max <- high_max
list$low_min <- low_min
list$med_min <- med_min
list$high_min <- high_min
write.csv(list,paste0(DIR, IN,"optimization_list_energy.csv"))
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\2018Spring\\Comp Programing in Econ\\Project\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
INPUT = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_100.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\1500pv_200stor.csv"))
sizing_1$version <- "1500pv_200stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\3000pv_450stor.csv"))
sizing_2$version <- "3000pv_450stor"
sizing_3 <- fread(paste0(DIR,OUT,"\\500pv_100stor.csv"))
sizing_3$version <- "500pv_100stor"
sizing_4 <- fread(paste0(DIR,OUT,"\\1000pv_200stor.csv"))
sizing_4$version <- "1000pv_200stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## III. Geospatial Analysis of costs #####################
##########################################################
#select analysis sample
sizing <- sizing_3
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
IN = "in"
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
View(opt)
str(opt)
opt_long <- gather(opt[,c(4:5,17:19)],key=case,value=max,low_max:high_max)
View(opt_long)
opt_long$case <- ifelse(opt_long$case == "low_max","LOW",
ifelse(opt_long$case == "med_max","BASE","HIGH"))
View(opt_long)
#bring together
sizing <- merge(sizing,opt_long,by=c("county","state","case"))
View(sizing)
sizing <- sizing_3
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long$case <- ifelse(opt_long$case == "low_max","LOW",
ifelse(opt_long$case == "med_max","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long,by=c("county","state","case"))
View(sizing)
#Set costs (2 cases )
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1300 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
View(sizing)
PV_COST = 3500 # $/kW
sizing$cost2 <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE
View(sizing)
PV_COST = 1200 # $/kW
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
##########################################################
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
test <- list[[1]]
test <- list$hr
test <- list[1]
test <- unlist(list, use.names=FALSE)
i = 1
#out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
id <- substr(list[i],1,nchar(list[i]) - 4)
out <- id %>% separate(id, c("remove","reliability","case","county","state"), "_")
##########################################################
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
results <- data.frame()
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
results <- data.frame()
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, rjson, maps,maptools, spatstat,rgeos,
broom, data.table, tidyr, lubridate)
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT <- "out\\"
IN <-  "in\\"
LD<- "LOW"
##########################################################
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
results <- data.frame()
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "1200pv_400stor"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("outcome",x,value=FALSE))) == 0]
results <- data.frame()
list[2]
for (i in 1:length(list)) {
out <- read.csv(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
results <- rbind(results,out)
}
View(results)
test <- results %>% group_by(reliability,case,county,state) %>%
summarize(len = length(pv))
test <- results %>% group_by(county,state) %>%
summarize(len = length(pv))
View(test)
