sizing_1 <- merge(sizing_1,opt_long,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
sizing_1 <- merge(sizing_1,opt_long_max,by=c("county","state","case"))
sizing_1$cost <- sizing_1$pv * PV_COST * PV_RATE + sizing_1$storage * BAT_COST * BAT_RATE +
sizing_1$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_1$max_load
#get costs
#Set costs
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1600 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
sizing_2 <- merge(sizing_2,opt_long_max,by=c("county","state","case"))
sizing_2$cost <- sizing_2$pv * PV_COST * PV_RATE + sizing_2$storage * BAT_COST * BAT_RATE +
sizing_2$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing_2$max_load
compiled <- rbind(sizing_1, sizing_2)
##average stats
r_stats <- sizing_1 %>% group_by(reliability, case) %>% summarize(med_sol = median(pv),
med_stor = median(storage),
max_sol = max(pv),
max_stor = max(storage),
min_sol = min(pv),
min_stor = min(storage),
med_cost = median(cost),
count = length(pv),
mean_sol = mean(pv),
mean_stor = mean(storage),
pv_10 = quantile(pv,.1),
stor_10 = quantile(storage,.1),
pv_90 = quantile(pv,.9),
stor_90 = quantile(storage,.9))
View(r_stats)
write.csv(r_stats,file = paste0(DIR,OUT, "\\size_cost_v3.csv"))
ggplot(data = base_rates) +
geom_histogram(aes(x=curr_ratio, fill="Current Rates")) +
geom_histogram(aes(x=private_ratio, fill="PMC Rates")) +
scale_fill_manual(values=c("aquamarine3","deeppink4")) +
xlab(label = "Revenue Source Ratio") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_blank(),legend.position = c(0.7,0.9))
ggplot(data = base_rates) +
geom_histogram(aes(x=curr_ratio, fill="Current Rates")) +
geom_histogram(aes(x=private_ratio, fill="PMC Rates")) +
scale_fill_manual(values=c("aquamarine3","deeppink4")) +
xlab(label = "Revenue Source Ratio") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_blank(),legend.position = c(0.5,0.9))
ggsave(filename = paste0(paste0(DIR,OUT, "\\images\\density_ratio",".jpg")))
rep(c(1,2,3,4),c(2,2,2,2))
rep(c(1,2,3,4),c(2,2,2,2), length=16)
rep(c(1,2,3,4),c(2,2,2,2), length.out=16)
rep(c(1,2,3,4),c(2,2,2,2), each=2)
rep(c(1,2,3,4), each=2)
rep(c(1,2,3,4), each=2, length.out=16)
rep(x=1:12, each=2, length.out=100)
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
##########################################################
## III. Geospatial Analysis of costs #####################
##########################################################
#select analysis sample
sizing <- sizing_2
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 400 # $/kWh
PV_COST = 1200 # $/kW
LOAD_COST = 1600 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:13)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
defect$current <- as.character(ifelse(defect$curr_diff > 0 ,1,0))
defect$private <- as.character(ifelse(defect$private_diff > 0 ,1,0))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v3_high cost.csv"))
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
##########################################################
## I. read in output data ################################
##########################################################
#rates
base_rates_100 <- fread(paste0(DIR,OUT,"\\ann_bill_100_median.csv"))
base_rates_100$reliability <- 0
base_rates_95 <- fread(paste0(DIR,OUT,"\\ann_bill_95_median.csv"))
base_rates_95$reliability <- 0.05
base_rates <- rbind(base_rates_100, base_rates_95)
rm(base_rates_100,base_rates_95)
#solar/storage systems
sizing_1 <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const).csv"))
sizing_1$version <- "600pv_100stor"
sizing_2 <- fread(paste0(DIR,OUT,"\\1200pv_400stor (min const).csv"))
sizing_2$version <- "1200pv_400stor"
#fip codes
fips <- fread(paste0(DIR,OUT,"\\fips.csv"))
#select analysis sample
sizing <- sizing_1
#bring in load data
opt <- fread(paste0(DIR,IN,"\\optimization_list_energy.csv"))
opt_long_max <- gather(opt[,c(4:5,17:19)],key=case,value=max_load,low_max:high_max)
opt_long_max$case <- ifelse(opt_long_max$case == "low_max","LOW",
ifelse(opt_long_max$case == "med_max","BASE","HIGH"))
#energy data
opt_long_energy <- gather(opt[,c(4:5,14:16)],key=case,value=energy,low_energy:high_energy)
opt_long_energy$case <- ifelse(opt_long_energy$case == "low_energy","LOW",
ifelse(opt_long_energy$case == "med_energy","BASE","HIGH"))
#bring together
sizing <- merge(sizing,opt_long_max,by=c("county","state","case"))
sizing <- merge(sizing,opt_long_energy,by=c("county","state","case"))
#bring in reliability data
reliability <- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score.csv"))
reliability <- reliability %>% group_by(case, county,state) %>%
summarize(outage_max = max(count_shed))
#bring together
sizing <- merge(sizing,reliability,by=c("county","state","case"))
#Set costs (2 cases )
BAT_COST = 100 # $/kWh
PV_COST = 600 # $/kW
LOAD_COST = 800 # $/kW peak load
OM_COST = 100 # $/kW peak load per year
#annual rates
int_rate = 0.07 # percentage interest rate
bat_life = 20 # years
sol_life = 25 # years
inv_life = 20 # years
BAT_RATE = int_rate / (1 - (1+int_rate)^(-bat_life))
PV_RATE = int_rate / (1 - (1+int_rate)^(-sol_life))
INVT_RATE = int_rate / (1 - (1+int_rate)^(-inv_life))
sizing$cost <- sizing$pv * PV_COST * PV_RATE + sizing$storage * BAT_COST * BAT_RATE +
sizing$max_load * LOAD_COST * INVT_RATE + OM_COST * sizing$max_load
sizing$reliability <- as.numeric(sizing$reliability)
sizes <- merge(sizing, fips, by=c("county","state"))
##merge in data
defect <- merge(base_rates, sizing[,c(1:3,5,6,8:13)], by=c("county","state","case", "reliability"), all.x = TRUE)
#take differences
defect$curr_diff <- defect$r_current - defect$cost
defect$private_diff <- defect$r_private - defect$cost
defect$r1_diff <- defect$r_1 - defect$cost
defect$r0.75_diff <- defect$r_0.75 - defect$cost
defect$r0.5_diff <- defect$r_0.5 - defect$cost
defect$r0.25_diff <- defect$r_0.25 - defect$cost
defect$r0_diff <- defect$r_0 - defect$cost
defect$current <- as.character(ifelse(defect$curr_diff > 0 ,1,0))
defect$private <- as.character(ifelse(defect$private_diff > 0 ,1,0))
#write to csv
write.csv(defect,file = paste0(DIR,OUT, "\\defection_v3.csv"))
loads <- c("LOW","BASE","HIGH")
rate <- c("private","current")
rels <- c(0,0.05)
for (index in 1:length(loads)){
for(rel in 1:length(rels)){
final <- subset(defect, case == loads[index] & reliability == rels[rel])
for (ra in 1:length(rate)){
data <- select(final,one_of(c("fips", rate[ra])))
if(nrow(unique(data[,2]))>1){
cols <- c("deeppink4","lightgoldenrod3")
} else {
cols <- c("deeppink4")
}
if(nrow(unique(data[,2]))>1){
labs <- c("no defection","defection")
} else {
labs <- c("no defection")
}
plot_usmap(data = data,
values = rate[ra], regions = "counties", lines=NA) +
scale_fill_manual(values=cols,labels=labs,na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
ggsave(filename = paste0(DIR,OUT, "\\images\\outcome_",rate[ra],"_",
loads[index],"_",rels[rel],".jpg"))
}
}
}
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
results<- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score_v2.csv"))
View(results)
View(results)
final <- results %>% group_by(reliability,case,county,state) %>%
mutate(diff = tot - lead(tot, default = 0))
final <- final[final$diff != 0,]
View(final)
results <- results %>% group_by(reliability,case,county,state) %>%
mutate(diff = tot - lead(tot, default = 0))
#load in reliability results
results<- fread(paste0(DIR,OUT,"\\600pv_100stor (min const)_reliability_score_v2.csv"))
results <- results %>% group_by(reliability,case,county,state) %>%
mutate(diff = tot - lead(tot, default = 0))
results <- final[final$diff != 0,]
## distribution of month of outage
month <- results[results$count_shed >72,]
View(month)
## distribution of month of outage
timing <- results[results$count_shed >72,]
ggplot(timing, aes(month, colour="case", fill="case")) +
geom_density(alpha=0.55)
ggplot(timing, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55)
ggplot(results, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55)
View(results)
View(results)
View(timing)
## distribution of month of outage
timing <- results %>% group_by(reliability, month,case) %>% summarise(tot = sum(diff))
View(timing)
## distribution of month of outage
timing <- results %>% group_by(reliability, month,case, count_shed) %>% summarise(tot = sum(diff))
View(timing)
plot_1 <- results[results$count_shed >48,]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8))
View(plot_1)
plot_1 <- results[results$count_shed >24,]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
View(plot_1)
plot_1 <- group_by(reliability, month,case) %>% summarise(tot = sum(diff))
plot_1 <- plot_1 %>% group_by(reliability, month,case) %>% summarise(tot = sum(diff))
plot_1 <- plot_1 %>% group_by(reliability, month,case) %>% summarise(tot = sum(diff))
ggplot(plot_1, aes(x = month, y=tot, fill=case)) +
geom_bar(stat="identity")  + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.8,0.8))
plot_1 <- results[results$count_shed >24,]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
test <- plot_1[rep(seq_len(dim(plot_1)[1]), plot_1$diff), 2]
View(test)
test <- plot_1[rep(seq_len(dim(plot_1)), plot_1$diff), 2]
test <- plot_1[rep(seq_len(dim(plot_1)[1:9]), plot_1$diff), 2]
test <- plot_1[rep(seq_len(dim(plot_1)[1]), plot_1$diff), 2]
test <- data.frame(plot_1[rep(seq_len(dim(plot_1)[1]), plot_1$diff), 2, drop=FALSE]), row.names=FALSE)
test <- data.frame(plot_1[rep(seq_len(dim(plot_1)[1]), plot_1$diff), 2, drop=FALSE], row.names=FALSE)
test <- data.frame(plot_1[rep(seq_len(dim(plot_1)[1:9]), plot_1$diff), 2, drop=FALSE], row.names=FALSE)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr, S4Vectors)
test <- rep(plot_1, plot_1$diff)
df.expanded <- plot_1[rep(row.names(plot_1), plot_1$diff), 1:2]
View(df.expanded)
df.expanded <- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
View(df.expanded)
plot_1 <- results[results$count_shed >24,]
plot_1<- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
plot_1 <- results[results$count_shed <24,]
plot_1<- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Count") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
plot_1 <- results[results$count_shed >24,]
plot_1<- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10)))
View(results)
plot_1<- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(limits=c(1,12))
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks = seq(1:12,1))
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks = seq(1,12,1))
plot_1 <- results[results$count_shed <24,]
plot_1<- plot_1[rep(row.names(plot_1), plot_1$diff), 1:9]
ggplot(plot_1, aes(month, colour=case, fill=case)) +
geom_density(alpha=0.55) + xlab(label = "Month") + ylab(label = "Density") +
theme(axis.text=element_text(size=18),axis.title=element_text(size=20,face="bold"),
legend.text=element_text(size=20),legend.title=element_text(size=20,face="bold"),
legend.position = c(0.2,0.8)) +
guides(colour = guide_legend(override.aes = list(size=10))) +
scale_x_continuous(breaks = seq(1,12,1))
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2,data.table, ggmap, usmap, mapproj,plyr)
# Set working directory
#DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT = "out\\"
IN = "in\\"
plot_usmap(data = statepop, values = "pop_2015", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
plot_usmap(lines = "black")
# Set working directory
DIR <- "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
#DIR <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
OUT = "out\\"
IN = "in\\"
##########################################################
## II. REgion plot #######################################
##########################################################
mapping <- fread(paste0(DIR,IN,"state_mapping.csv"))
plot_usmap(data = mapping, values = Region, regions = "states")
plot_usmap(data = mapping, values = "Region", regions = "states")
plot_usmap(data = mapping, values = "Region", regions = "states") +
scale_fill_manual(na.value="black") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
plot_usmap(data = mapping, values = "Region", regions = "states") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=18),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
plot_usmap(data = mapping, values = "Region", regions = "states") +
theme(legend.position = c(0.89,0.2),legend.text=element_text(size=16),
legend.title=element_text(size=15,face="bold"),
plot.title = element_text(size=18,face="bold", hjust=0.5, vjust=0)) +
labs(fill="")
# Clear workspace
rm(list = ls())
# Packages
library(pacman)
p_load(magrittr, dplyr, stringr, ggplot2, usmap, RColorBrewer, data.table, scales,tidyr, S4Vectors)
# Set working directory
#DIR = "C:\\Users\\will-\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
DIR = "C:\\Users\\Will\\GoogleDrive\\UCBerkeley\\Research\\Papers\\2018 Off-grid\\Analysis\\"
OUT = "out"
IN = "in"
DIR2 <- "G:\\Team Drives\\grid_defect_data\\Analysis\\"
#DIR2 <- "C:\\Users\\Will\\Desktop\\data\\Analysis\\"
folder <- "\\600pv_100stor (min const)"
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
i=1
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,count_shed,month) %>%
summarize(load = sum(load),
shed = sum(shed))
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
View(final)
##summing when shedding happens
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
results <- rbind(results,as.data.frame(final))
}
list <- list.files(paste0(DIR2,OUT,folder,"\\"))
list <- list[lapply(list,function(x) length(grep("results",x,value=FALSE))) == 0]
list <- list[lapply(list,function(x) length(grep("_0_",x,value=FALSE))) == 0]
results <- data.frame()
##summing when shedding happens
for (i in 1:length(list)) {
out <- fread(paste0(DIR2, OUT,folder,"\\",list[i]))
out$id <- substr(list[i],1,nchar(list[i]) - 4)
out <- out %>% separate(id, c("remove","reliability","case","county","state"), "_")
out$remove <- NULL
out$month <- rep(x=1:12, each=730, length.out=78840)
final <- out %>% group_by(reliability, case, county,state,month) %>%
summarize(load = sum(load),
shed = sum(shed))
results <- rbind(results,as.data.frame(final))
}
write.csv(results, file = paste0(DIR2,OUT, "\\","600pv_100stor (min const)_month_shedding.csv"))
View(results)
results$shed_percent <- results$shed / results$load
final <- results %>% group_by(month) %>%
summarize(shed_percent = mean(shed_percent))
View(final)
write.csv(final, file = paste0(DIR2,OUT, "\\month_shedding.csv"))
final_2 <- results %>% group_by(month) %>%
summarize(load = sum(load),
shed = sum(shed))
final_2$shed_percent <- final_2$shed / final_2$load
View(final_2)
